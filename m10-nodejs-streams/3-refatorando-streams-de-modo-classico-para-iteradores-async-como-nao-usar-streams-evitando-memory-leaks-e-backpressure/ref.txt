Existe diferença em como o .pipe e o ​pipeline​ consomem Streams. O .pipe permite que você não leia a stream por completo,
já o ​pipeline​ demanda que você consuma toda a stream e caso a encerre no meio do processo,
ele lança um erro de ERR_STREAM_PREMATURE_CLOSE​.

https://stackoverflow.com/questions/55959479/error-err-stream-premature-close-premature-close-in-node-pipeline-stream/61379055#61379055

https://stackoverflow.com/questions/32661873/node-streams-cause-large-memory-footprint-or-leak

https://www.alxolr.com/articles/understanding-memory-leaks-in-node-js-part-1

https://medium.com/the-node-js-collection/a-brief-history-of-node-streams-pt-2-bcb6b1fd7468

https://nodejs.org/es/docs/guides/backpressuring-in-streams/